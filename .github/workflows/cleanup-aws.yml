name: Cleanup AWS Resources

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "YES" to confirm resource removal'
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  cleanup:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    if: github.event.inputs.confirmation == 'YES'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Remove SST resources
        run: |
          STAGE=$(echo ${{ github.ref_name }} | sed 's/main/prod/')
          npx sst remove --stage $STAGE

      - name: Verify removal
        run: |
          echo "Verifying removal of resources for ${{ github.ref }} branch..."
          
          STACK_NAME=$(if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then echo "dev"; elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then echo "staging"; elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then echo "prod"; fi)
          
          # Check if the CloudFormation stack still exists
          if aws cloudformation describe-stacks --stack-name $STACK_NAME 2>&1 | grep -q 'does not exist'; then
            echo "CloudFormation stack $STACK_NAME has been successfully removed."
          else
            echo "Warning: CloudFormation stack $STACK_NAME may still exist."
          fi
          
          # Additional resource checks can be added here if needed
          
          echo "Resource verification complete."

      - name: Print caller identity
        run: aws sts get-caller-identity